@inject NopAjaxCartSettings nopAjaxCartSettingsModel

@model SevenSpikes.Nop.Plugins.AjaxCart.Models.AjaxCartButtonsModel

@if (Model.AddProductToCartAjaxButtonModels.Count > 0)
{
    bool isThereAnyProductsWithAllowedQuantities = false;

    for (var i = 0; i < Model.AddProductToCartAjaxButtonModels.Count; i++)
    {
        var button = Model.AddProductToCartAjaxButtonModels[i];

        <div class="ajax-cart-button-wrapper @(nopAjaxCartSettingsModel.EnableProductQuantityTextBox ? Html.Raw("qty-enabled") : null)" data-productid="@button.ProductId" data-isproductpage="@button.IsProductPage.ToString().ToLowerInvariant()">
            @if (button.IsProductPage)
            {
                <button type="button" id="add-to-cart-button-@button.ProductId" class="button-1 add-to-cart-button nopAjaxCartProductVariantAddToCartButton" data-productid="@button.ProductId">
                    @button.ButtonValue
                </button>
            }
            else
            {
                if (nopAjaxCartSettingsModel.EnableProductQuantityTextBox)
                {
                    if (button.AllowedQuantities.Count > 0)
                    {
                        isThereAnyProductsWithAllowedQuantities = true;

                        <select data-quantityproductid="@button.ProductId" class="productQuantityDropdown">
                            @foreach (var allowedQuantity in button.AllowedQuantities)
                            {
                                <option value="@allowedQuantity.Value">@allowedQuantity.Text</option>
                            }
                        </select>

                        <input class="@string.Concat("productQuantityChanged", button.ProductId)" type="hidden" value="no" />
                    }
                    else
                    {
                        <button type="button" class="minus @(string.Concat("decrease",button.ProductId))  left" onclick="decrementQuantityValue(this)">
                            <span>-</span>
                        </button>
                        <input type="text" data-quantityproductid="@button.ProductId" class="productQuantityTextBox"  value="@button.DefaultProductMinimumQuantity" />
                        <button type="button" class="plus  @(string.Concat("increase",button.ProductId)) left" onclick="incrementQuantityValue(this)">
                        <span>+</span>
                    </button>
                        <script asp-location="Footer">
                            function incrementQuantityValue(event) {                               
                                var input = $(event).siblings('.productQuantityTextBox');
                                var value = parseInt(input.val());
                                if (isNaN(value)) {
                                    input.val(1);
                                    return;
                                }
                                value++;
                                input.val(value);

                                input.trigger('input');
                            }
                            function decrementQuantityValue(event) {           
                                console.log("hello decrement");
                                    var input = $(event).siblings('.productQuantityTextBox');
                                    var value = parseInt(input.val());
                                    if (isNaN(value)) {
                                        input.val(1);
                                        return;
                                    }
                                    if (value <= 1) {
                                        return;
                                    }
                                    value--;
                                    input.val(value);

                                    input.trigger('input');
                                }
                           
                        </script>
                        
                    }
                }

                <button type="button" class="button-2 product-box-add-to-cart-button nopAjaxCartProductListAddToCartButton" data-productid="@button.ProductId">
                    @button.ButtonValue
                </button>
            }


            @if (isThereAnyProductsWithAllowedQuantities && i == Model.AddProductToCartAjaxButtonModels.Count - 1)
            {
                <input type="hidden" class="ajaxCartAllowedQuantitesHover" data-productItemSelector="nopAjaxCartSettingsModel.ProductBoxProductItemElementSelector" />
            }
        </div>

               
    }
}